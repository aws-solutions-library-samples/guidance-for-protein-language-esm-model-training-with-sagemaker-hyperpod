apiVersion: v1
kind: Service
metadata:
  name: etcd
spec:
  ports:
    - name: etcd-client-port
      port: 2379
      protocol: TCP
      targetPort: 2379
  selector:
    app: etcd

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: etcd
  name: etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
        - name: etcd
          command: ["/usr/local/bin/etcd"]
          args:
            - "--data-dir"
            - "/var/lib/etcd"
            - "--enable-v2"
            - "--listen-client-urls"
            - "http://0.0.0.0:2379"
            - "--advertise-client-urls"
            - "http://0.0.0.0:2379"
            - "--initial-cluster-state"
            - "new"
          image: quay.io/coreos/etcd:v3.5.19
          ports:
            - containerPort: 2379
              name: client
              protocol: TCP
            - containerPort: 2380
              name: server
              protocol: TCP
      restartPolicy: Always
---
apiVersion: "kubeflow.org/v1"
kind: PyTorchJob
metadata:
  name: esm2
spec:
  elasticPolicy:
    rdzvBackend: etcd
    rdzvHost: etcd
    rdzvPort: 2379
    minReplicas: 1
    maxReplicas: 64
    maxRestarts: 100
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 90
  pytorchReplicaSpecs:
    Worker:
      replicas: ${NUM_NODES}
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          tolerations:
            - key: nvidia.com/gpu
              operator: Exists
              effect: NoSchedule
          volumes:
          - name: fsx-pv-storage
            persistentVolumeClaim:
              claimName: fsx-claim
          - name: shm
            emptyDir:
              medium: Memory
          containers:
            - name: pytorch
              image: ${REGISTRY}${DOCKER_IMAGE_NAME}:${TAG}
              resources:
                requests:
                  nvidia.com/gpu: $GPU_PER_NODE
                  vpc.amazonaws.com/efa: $EFA_PER_NODE
                limits:
                  nvidia.com/gpu: $GPU_PER_NODE
                  vpc.amazonaws.com/efa: $EFA_PER_NODE
              env:
                - name: NCCL_DEBUG
                  value: "INFO"
                - name: WANDB_MODE
                  value: "offline"
                - name: POD_RANK
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.labels['training.kubeflow.org/replica-index']
              volumeMounts:
                - mountPath: /fsx-shared
                  name: fsx-pv-storage
                - mountPath: /dev/shm
                  name: shm
              imagePullPolicy: Always
              command:
                - accelerate
                - launch
                - --num_processes=${NUM_NODES} # Total GPUs
                - --num_machines=${NUM_NODES} # Num Nodes
                - --machine_rank=$(POD_RANK)
                - --rdzv_backend=etcd
                - --main_process_port=2379
                - --main_process_ip=etcd
                - --use_fsdp 
                - --fsdp_sharding_strategy=FULL_SHARD 
                - --fsdp_auto_wrap_policy=TRANSFORMER_BASED_WRAP 
                - --fsdp_transformer_layer_cls_to_wrap=EsmLayer
                - --fsdp_backward_prefetch=BACKWARD_PRE 
                - --fsdp_cpu_ram_efficient_loading=True 
                - --fsdp_sync_module_states=True 
                - --fsdp_use_orig_params=True 
                - /workspace/train.py
                - --config_name=facebook/esm2_t6_8M_UR50D 
                - --dataloader_num_workers=2
                - --bf16=True
                - --do_eval=True
                - --do_preprocess=False
                - --do_train=True
                - --gradient_accumulation_steps=11
                - --logging_steps=16
                - --num_train_epochs=1
                - --output_dir=${OUTPUT_DIR}
                - --overwrite_output_dir
                - --per_device_train_batch_size=4
                - --max_train_samples=100000
                - --tokenizer_name=facebook/esm2_t6_8M_UR50D 
                - --dataset_dir=${TARGET_PATH}/processed/arrow 
                - --torch_compile=False
                - --pad_to_max_length=True
                - --max_seq_length=512
